## All parameters which can be changed should be placed the config file. 
#  This is not always the case so be aware that you must look in the steering files. 
[DEFAULT]

# The path to this config file
BasePath	        = %(eutelescopepath)s/jobsub/testbeam_201605
#Data ca		n be found here. You should be able to run the examples listed int the runlist
NativePath			= /nfs/dust/atlas/user/yanwing/testbeam201605-abcn25/data
#The location of the steering templates
TemplatePath		= %(BasePath)s/steering

#1;95;0c The GEAR file describing the detector geometry, this is passed from the runlist.csv
GearFile			= @GearGeoFile@

# Path to the GEAR files
GearFilePath    	= %(BasePath)s/geometry

# The XML file with histogram information. This is used to plot the histograms. 
#Many histograms do not use this information.
HistoInfoFile   	= %(TemplatePath)s/histoinfo.xml

# Formats the output; @RunNumber@ is the current run number padded with leading
# zeros to 6 digits
FilePrefix   	 	= run@RunNumber@	

# Skip events in a run; set to 0 for all data
SkipNEvents		= 0

# Output subfolder structure

DatabasePath        = %(BasePath)s/output/database
HistogramPath       = %(BasePath)s/output/histograms
LcioPath            = %(BasePath)s/output/lcio                                                                                                                                       
LogPath             = %(BasePath)s/output/logs
Rootpath	    = %(BasePath)s/output/root

#DatabasePath		= ./output/database
#HistogramPath		= ./output/histograms
#LcioPath            = ./output/lcio
#LogPath				= ./output/logs

# Limit processing of a run to a certain number of events
MaxRecordNumber		= 30000

# The verbosity used by the EUTelescope producers (i.e. MESSAGE, DEBUG, ERROR
# with appended level from 0..9, e.g. MESSAGE5). If you set this to DEBUG0 but
# you do not see any DEBUG messages, make sure that you set CMAKE_BUILD_TYPE to
# Debug in the $EUTELESCOPE/CMakeList.txt file.
Verbosity		= MESSAGE5
#Verbosity		= DEBUG1

# After how many events you want a "Processing event XXXX" message
NEventsMessage = 10000

[rootReader]
inputCollectionName = tracks
lcioInputName = GBLtracks
HistogramName=GBLtracks

[converter]

# How many events for noisy pixel analysis

NoOfEvents = 20000

M26SensorVec = 0 1 2 3 4 5

FiringFreqCutM26 = 0.003

APIXSensorVec = 20

FiringFreqCutAPIX = 0.001

StripVec = 10 11 12 13 14 15

FiringFreqCutStrip = 0.5

[clustering]

[hitmaker]
localDistDUT = 0 0
#Number of events used for Correlator and PreAligner
NoEvents = 30000

#Residual cuts for Correlator and PreAligner
ResidualsXMax =  10. 10.  10. 100. 100. 100. 100. 100. 100.     10. 10. 100.  10.

ResidualsXMin = -10. -10. -10. -100. -100. -100. -100. -100. -100. -10. -10. -100. -10.

ResidualsYMax =  10.  10.  10.  100. 100. 100. 100. 100. 100.   10. 10. 100.  10.

ResidualsYMin = -10. -10. -10.  -100. -100. -100. -100. -100. -100.  -10. -10. -100. -10.

#Used so we can identify strip sensors. NOTE: This is done in the local frame. So if strip is rotated you must fix y axis rather than x.
ExcludedPlanesXCoord= 

ExcludedPlanesYCoord= 10

ExcludedPlanes= 0 11 12 13 14 15

[patternRecognition]
dutDirection =0
#Link the hits on the outer planes of each arm with x/y smaller than this in the global frame 

DoubletDistCut = 3 3
#Link central hit with distance less than this in x/y from predicted position using outer hits from cut DoubletDistCut. 

DoubletCenDistCut = 0.05 0.05
#Create triplets from hits on each arm now.
#Predicted position at central point and slope must agree with the cut given:
TripletConnectDistCut = 0.15 0.15
TripletSlopeCuts = 0.01 0.01

DUTRadialwindow= 0.5
DUTWindow= 0.3
#These planes will not create a state.
excludeplanes= 10 12 11 13 14 15 20

#Plane dimension is needed to determine in what directions should we compare track and DUT hit
planeDimensions= 2 2 2 1 1 1 1 1 1 2 2 2 2 

#This is used to determine the initial curvature of the track at plane 0
InitialDisplacement=0
HitInputCollectionName=local_hit
TrackCandHitOutputCollectionName=track_candidates
Planes=0 1 2 3 4 5

[GBLTrackFit]
#Estimate resolution used in the track fit:
r = 0.1
#0.0032
rFEI4X = 0.072
rFEI4Y = 0.0144
dutX=10000
#0.022
dutY=0.069

dutPlanes=  20

xResolutionPlane        =  %(r)s %(r)s %(r)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s %(r)s  %(r)s %(rFEI4X)s %(r)s
yResolutionPlane        =  %(r)s %(r)s %(r)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s %(r)s  %(r)s %(rFEI4Y)s %(r)s 
#Outlier treatment not done for this example.
GBLMEstimatorType=
#Collections you feel can be deleted from the lcio collection after this point
dropCollectionName = 
inputCollectionName = track_candidates
outputCollectionName = tracks 
lcioInputName = trackcand
lcioOutputName = GBLtracks
histoName=GBLtracks
#########Selection is done automatically in this example. See steering file.
inColSel=%(outputCollectionName)s
outColSel=selTrack
mustHaveHit=
mustNotHaveHit=  
chi2NormCut=5
OutputPathROOT=%(Rootpath)s/NTuple_%(FilePrefix)s.root
#This is used in the trackAnalysis processor to create histograms to be filled.
Planes = 0 1 2 3 4 5  
#This processor will select tracks with hits on certain planes.

[GBLAlign]
#Input lcio and collection name.
#The tracks from pattern recogntion are used directly and then turned to GBL tracks internally. 
#The global derivatives take the results from pattern recognition to calculate the alignment parameters.
lcioInputName=trackcand
inputCollectionName=track_candidates

BeamCharge=-1
##These are a list of plane alignment directions which will be fixed.
# At least 2 planes must be fixed without magnetic field and 3 with. 
FixXshifts=0 5  
FixYshifts=0 5   
FixZshifts=0 5     
FixXrot=0  10 20 5 
FixYrot=0  10 20 5 
FixZrot=0 5 
##Estimate resolution to pass to millepede.
# If alignment is off by quite a margin this will have to me increased.

r = 0.04
rFEI4X = 0.072
rFEI4Y = 0.0144
dutX=100000
#matrix become singular if value is too large
dutY=0.000069
#0.000069
#dutY=angluar pitch/sqrt(12)
#This resolution is varied in iterative alignment to account for systematic errors present in the final alignment by millepede.
xResolutionPlane        = %(r)s %(r)s %(r)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s %(dutX)s  %(r)s  %(r)s  %(rFEI4X)s %(r)s
yResolutionPlane        = %(r)s %(r)s %(r)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s %(dutY)s  %(r)s  %(r)s  %(rFEI4Y)s %(r)s
#Output binary file which contains the full setup information and tracks.
MilleBinaryFilename=millepede.bin
#This file is create to run millepede. Done internally but can run this afterwards with pede steer.txt
MilleSteeringFilename = steer.txt
#Alignment parameters determined from global parameters. 
MilleResultFilename= millepede.res
#Aligned gear.
GearAlignedFile =alignedGear-iter2-%(FilePrefix)s.xml
#This used to reduce the impact of outliers on individual track fits.
#This is done internally by millepede, 4 is the number of iterations this is done for.
#So this gives, iteration: 1)No downweighting 2/3)Huber 4)Cauchy
outlierdownweighting=outlierdownweighting 4
#This is used by GBL and also takes into account outliers. 
#This is dealt with by millepede and is not used here.
GBLMEstimatorType=
#This is the name of the output lcio. This is empty at the moment since we only need the gear file to be populated with the correct geometry
TracksOutputCollectionName="Alignment-tracks"
#These planes are completely excluded from the analysis. The scattering from the plane however is still taken into account.
ExcludePlanes="" 
#This is the cut made by millepede on the first and second iteration.
#The cut is expressed as factor which you multiple the chi2 value which corresonds to 3 standard deviations. 
#This value is then used as your cut. Here the cut is huge with: cut on first iteration =  1000*(chi2 value at 3 standard deviations) 
pede          = chiscut 30  6

#This is the iterative alignment variables. This will do the millepede alignment in steps so you don't have to.
#Use is for alignments which will not work on a single iteration. 
[iterativeAlignment]
r="0.006" 
dutX="0.02"
dutY="100000000"
xres="0.006 $r $r $dutX $r $r 0.006"
yres="0.006 $r $r $dutY $r $r 0.006"
minTracksPerEventAcceptance=0.1  
inputGearInitial=@GearGeoFile@ 
allPlanes="0 1 2 8 3 4 5"
allPlanesFixed="0     5"  

[GBLTrackAnalysis]
dropCollectionName = 
inputCollectionName = tracks
outputCollectionName = tracks-same 
lcioInputName = GBLtracks-for-john
lcioOutputName = GBLtracks-for-john-check
histoName=GBLtracks-john
Planes = 0 1 2 3 4 5 



